package com.acko.tool.exception.enums;

import lombok.Getter;

@Getter
public enum ExceptionE implements IException {

    /*
     * override getMessage only if default exception.getMessage() is not needed
     * */

    INVALID_INPUT_EXCEPTION(ErrorCode.INPUT_VALIDATION_ERROR_CLIENT),
    CLIENT_JSON_EXCEPTION(ErrorCode.CLIENT_JSON_ERROR),
    DECODER_EXCEPTION(ErrorCode.DECRYPTION_FAILED_CLIENT),
    ILLEGAL_STATE_EXCEPTION(ErrorCode.INVALID_STATE_CLIENT),
    HTTP_MESSAGE_NOT_READABLE_EXCEPTION(ErrorCode.INPUT_VALIDATION_ERROR_CLIENT),
    HTTP_SERVER_ERROR_EXCEPTION(ErrorCode.HTTP_ERROR_SERVER),
    RUST_EXCEPTION(ErrorCode.HTTP_ERROR_CLIENT),
    JSON_SYNTAX_EXCEPTION(ErrorCode.SERVER_JSON_ERROR),
    CRYPTO_EXCEPTION(ErrorCode.ENCRYPT_DECRYPT_ERROR_SERVER),
    DATA_ACCESS_EXCEPTION(ErrorCode.DATA_ACCESS_ERROR),
    HIBERNATE_EXCEPTION(ErrorCode.INVALID_QUERY_ERROR),
    JSON_EXCEPTION(ErrorCode.SERVER_JSON_ERROR),
    NULL_POINTER_EXCEPTION(ErrorCode.NULL_POINTER_ERROR_SERVER),
    NO_SUCH_ELEMENT_EXCEPTION(ErrorCode.OBJECT_DOES_NOT_EXIST_CLIENT),
    USER_NOT_FOUND_EXCEPTION(ErrorCode.OBJECT_DOES_NOT_EXIST_CLIENT),
    POLICY_NOT_FOUND_EXCEPTION(ErrorCode.OBJECT_DOES_NOT_EXIST_CLIENT),
    POLICY_ALREADY_CANCELLED_EXCEPTION(ErrorCode.INVALID_STATE_CLIENT),
    EXCEPTION(ErrorCode.UNCATEGORISED_ERROR),
    INVALID_REQUEST_TYPE_EXCEPTION(ErrorCode.MESSAGE_ATTRIBUTE_INVALID),
    CONSTRAINT_VIOLATION_EXCEPTION(ErrorCode.CONSTRAINT_VIOLATION_ERROR),
    MISSING_SERVLET_REQUEST_PARAMETER_EXCEPTION(ErrorCode.INPUT_VALIDATION_ERROR_CLIENT),
    DATA_INTEGRITY_VIOLATION_EXCEPTION(ErrorCode.DATA_ACCESS_ERROR),
    INTERNAL_SERVER_ERROR(ErrorCode.UNCATEGORISED_ERROR),
    // changing illegal argument to client side validation
    ILLEGAL_ARGUMENT_EXCEPTION(ErrorCode.INPUT_VALIDATION_ERROR_CLIENT),
    INVALID_DATA_ACCESS_RESOURCE_USAGE_EXCEPTION(ErrorCode.DATA_ACCESS_ERROR),
    MESSAGE_DELIVERY_EXCEPTION(ErrorCode.SQS_SEND_MESSAGE_FAILED),
    AUTHENTICATION_EXCEPTION(ErrorCode.AUTHENTICATION_FAILED),
    DATE_TIME_PARSE_EXCEPTION(ErrorCode.CLIENT_JSON_ERROR),
    BAD_PLAN_CONFIGURATION_EXCEPTION(ErrorCode.BAD_CONFIGURATION_ERROR),
    PAYMENT_EXCEPTION(ErrorCode.PAYMENT_ERROR),
    POLICY_ISSUANCE_EXCEPTION(ErrorCode.INVALID_STATE_CLIENT),
    BAD_POLICY_ID_EXCEPTION(ErrorCode.INVALID_STATE_CLIENT),
    BAD_PROPOSAL_ID_EXCEPTION(ErrorCode.INVALID_STATE_CLIENT),
    POLICY_DATA_PARSING_EXCEPTION(ErrorCode.INVALID_STATE_CLIENT),
    TEMPLATE_NOT_FOUND_EXCEPTION(ErrorCode.BAD_CONFIGURATION_ERROR),
    ACKO_FEIGN_EXCEPTION(ErrorCode.HTTP_ERROR_SERVER),
    UPR_NOT_FOUND_EXCEPTION(ErrorCode.OBJECT_DOES_NOT_EXIST_CLIENT),
    GRAPH_QL_EXCEPTION(ErrorCode.HTTP_ERROR_SERVER),
    OBJECT_MAPPER_EXCEPTION(ErrorCode.HTTP_ERROR_SERVER),
    DEPENDENT_EXCEPTION(ErrorCode.HTTP_ERROR_SERVER),
    UNSUPPORTED_POLICY_TYPE_EXCEPTION(ErrorCode.BAD_CONFIGURATION_ERROR),
    MASTER_COVER_EXCEPTION(ErrorCode.INVALID_STATE_CLIENT),
    PRODUCT_PLAN_EXCEPTION(ErrorCode.INVALID_STATE_CLIENT),
    BAD_REQUEST_EXCEPTION(ErrorCode.INPUT_VALIDATION_ERROR_CLIENT),
    RESOURCE_NOT_FOUND_EXCEPTION(ErrorCode.OBJECT_DOES_NOT_EXIST_CLIENT);

    ErrorCode errorCode;

    ExceptionE(ErrorCode errorCode) {
        this.errorCode = errorCode;
    }

    public static ExceptionE getExceptionE(final Object e) {
        return ExceptionE.INTERNAL_SERVER_ERROR;    // TODO: fix this
    }

//    public static String camelToUpperSnakeCase(String s) {
//        return CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, s);
//    }
}
